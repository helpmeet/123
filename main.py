import os
import time
import hmac
import hashlib
import requests
import threading
import http.server
import socketserver
from datetime import datetime

# === üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è ===
THREECOMMAS_API_KEY = os.getenv("THREECOMMAS_API_KEY")
THREECOMMAS_API_SECRET = os.getenv("THREECOMMAS_API_SECRET")
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")
POLL_INTERVAL = int(os.getenv("POLL_INTERVAL", "15"))

API_URL = "https://api.3commas.io/public/api/ver1/deals"
known_deals = {}

# === üåê –§–µ–π–∫–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä –¥–ª—è Render (–Ω–µ –∑–∞—Å—ã–ø–∞–ª) ===
def fake_server():
PORT = int(os.environ.get("PORT", 8000))
Handler = http.server.SimpleHTTPRequestHandler
with socketserver.TCPServer(("", PORT), Handler) as httpd:
print("üåê Fake HTTP server running on port", PORT)
httpd.serve_forever()

# === üß† –í–Ω–µ—à–Ω–∏–π IP (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏) ===
def log_external_ip():
try:
ip = requests.get("https://api.ipify.org").text
print(f"[DEBUG] –í–Ω–µ—à–Ω–∏–π IP Render: {ip}")
except Exception as e:
print(f"[DEBUG] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–Ω–µ—à–Ω–∏–π IP: {e}")

# === üîê –ü–æ–¥–ø–∏—Å—å –∑–∞–ø—Ä–æ—Å–∞ –∫ 3Commas ===
def sign_request(params):
payload = '&'.join([f'{k}={v}' for k, v in sorted(params.items())])
signature = hmac.new(
bytes(THREECOMMAS_API_SECRET, 'utf-8'),
msg=bytes(payload, 'utf-8'),
digestmod=hashlib.sha256
).hexdigest()
return signature

# === üìä –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–¥–µ–ª–æ–∫ ===
def get_deals():
params = {"limit": 20}
headers = {
"APIKEY": THREECOMMAS_API_KEY,
"Signature": sign_request(params)
}
response = requests.get(API_URL, headers=headers, params=params)
print(f"[DEBUG] HTTP status: {response.status_code}")
print(f"[DEBUG] Response text: {response.text[:300]}")
response.raise_for_status()
return response.json()

# === üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ Telegram ===
def send_telegram_message(text):
url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
data = {
"chat_id": TELEGRAM_CHAT_ID,
"text": text,
"parse_mode": "HTML"
}
try:
resp = requests.post(url, data=data)
print(f"[DEBUG] Telegram send status: {resp.status_code}")
if resp.status_code != 200:
print(f"[DEBUG] Telegram error: {resp.text}")
except Exception as e:
print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram: {e}")

# === üîÅ –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ ===
def monitor_deals():
while True:
try:
deals = get_deals()
print(f"[{datetime.now().strftime('%Y-%m-%d %H:%M:%S')}] –ü–æ–ª—É—á–µ–Ω–æ —Å–¥–µ–ª–æ–∫: {len(deals)}")

for deal in deals:
deal_id = deal["id"]
print(f"[DEBUG] –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è —Å–¥–µ–ª–∫–∞ ID: {deal_id}, —Å—Ç–∞—Ç—É—Å: {deal['status']}")

dca_count = deal["completed_safety_orders_count"]
status = deal["status"]
bought_avg = float(deal.get("bought_average") or 0)
bought_vol = float(deal.get("bought_volume") or 0) * 10
profit_pct = float(deal.get("actual_profit_percentage", 0)) * 10

# –¢–µ—Å—Ç–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞
send_telegram_message(f"‚ÄºÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞. –°–¥–µ–ª–∫–∞: {deal['pair']} ID: {deal_id}")

if deal_id not in known_deals:
msg = (
f"üìà <b>–ù–æ–≤–∞—è —Å–¥–µ–ª–∫–∞</b> –ø–æ –ø–∞—Ä–µ <b>{deal['pair']}</b>\n"
f"üü¢ –°—Ç–∞—Ç—É—Å: <code>{status}</code>\n"
f"üíµ –¶–µ–Ω–∞ –≤—Ö–æ–¥–∞: {bought_avg:.2f}"
)
send_telegram_message(msg)
known_deals[deal_id] = {"dca": dca_count, "status": status}

else:
prev = known_deals[deal_id]

if dca_count > prev["dca"]:
msg = (
f"‚ûï <b>–î–æ–∫—É–ø–∏–ª</b> #{dca_count} –≤ —Å–¥–µ–ª–∫–µ <b>{deal['pair']}</b>\n"
f"üìä –û–±—ä—ë–º: {bought_vol:.2f} {deal['base_order_volume_type']}"
)
send_telegram_message(msg)
known_deals[deal_id]["dca"] = dca_count

if status == "completed" and prev["status"] != "completed":
msg = (
f"‚úÖ <b>–°–¥–µ–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞</b>: <b>{deal['pair']}</b>\n"
f"üìà –ü—Ä–∏–±—ã–ª—å: {profit_pct:.2f}%"
)
send_telegram_message(msg)
known_deals[deal_id]["status"] = status

except Exception as e:
print(f"[{datetime.now().strftime('%Y-%m-%d %H:%M:%S')}] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–¥–µ–ª–æ–∫: {e}")
time.sleep(POLL_INTERVAL)

# === üöÄ –ó–∞–ø—É—Å–∫ ===
if __name__ == "__main__":
threading.Thread(target=fake_server, daemon=True).start()
log_external_ip()
print("üì° –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–¥–µ–ª–æ–∫ 3Commas –∑–∞–ø—É—â–µ–Ω...")
monitor_deals()
