import os
import time
import hmac
import hashlib
import requests
import threading
import http.server
import socketserver

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
THREECOMMAS_API_KEY = os.getenv("THREECOMMAS_API_KEY")
THREECOMMAS_API_SECRET = os.getenv("THREECOMMAS_API_SECRET")
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")
POLL_INTERVAL = int(os.getenv("POLL_INTERVAL", "15"))

API_URL = "https://api.3commas.io/public/api/ver1/deals"
known_deals = {}

# === –§–µ–π–∫–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä –¥–ª—è Render (Web Service) ===
def fake_server():
    PORT = int(os.environ.get("PORT", 8000))
    Handler = http.server.SimpleHTTPRequestHandler
    with socketserver.TCPServer(("", PORT), Handler) as httpd:
        print("Fake HTTP server running on port", PORT)
        httpd.serve_forever()

# === –ü–æ–¥–ø–∏—Å—å –∑–∞–ø—Ä–æ—Å–∞ ===
def sign_request(params):
    payload = '&'.join([f'{k}={v}' for k, v in sorted(params.items())])
    signature = hmac.new(
        bytes(THREECOMMAS_API_SECRET, 'utf-8'),
        msg=bytes(payload, 'utf-8'),
        digestmod=hashlib.sha256
    ).hexdigest()
    return signature

# === –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–¥–µ–ª–æ–∫ ===
def get_deals():
    params = {"limit": 20}
    headers = {
        "APIKEY": THREECOMMAS_API_KEY,
        "Signature": sign_request(params)
    }
    response = requests.get(API_URL, headers=headers, params=params)
    response.raise_for_status()
    return response.json()

# === –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram ===
def send_telegram_message(text):
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
    data = {
        "chat_id": TELEGRAM_CHAT_ID,
        "text": text,
        "parse_mode": "HTML"
    }
    try:
        requests.post(url, data=data)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram: {e}")

# === –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ ===
def monitor_deals():
    while True:
        try:
            deals = get_deals()
            for deal in deals:
                deal_id = deal["id"]
                dca_count = deal["completed_safety_orders_count"]
                status = deal["status"]

                # –î–µ–Ω–µ–∂–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
                bought_avg = float(deal["bought_average"] or 0)
                bought_vol = float(deal["bought_volume"] or 0) * 10
                profit_pct = float(deal.get("actual_profit_percentage", 0)) * 10

                if deal_id not in known_deals:
                    # –ù–æ–≤–∞—è —Å–¥–µ–ª–∫–∞
                    msg = (
                        f"üìà <b>–ù–æ–≤–∞—è —Å–¥–µ–ª–∫–∞</b> –ø–æ –ø–∞—Ä–µ <b>{deal['pair']}</b>\n"
                        f"üü¢ –°—Ç–∞—Ç—É—Å: <code>{status}</code>\n"
                        f"üíµ –¶–µ–Ω–∞ –≤—Ö–æ–¥–∞: {bought_avg:.2f}"
                    )
                    send_telegram_message(msg)
                    known_deals[deal_id] = {"dca": dca_count, "status": status}

                else:
                    prev = known_deals[deal_id]

                    if dca_count > prev["dca"]:
                        msg = (
                            f"‚ûï <b>–î–æ–∫—É–ø–∏–ª</b> #{dca_count} –≤ —Å–¥–µ–ª–∫–µ <b>{deal['pair']}</b>\n"
                            f"üìä –û–±—ä—ë–º: {bought_vol:.2f} {deal['base_order_volume_type']}"
                        )
                        send_telegram_message(msg)
                        known_deals[deal_id]["dca"] = dca_count

                    if status == "completed" and prev["status"] != "completed":
                        msg = (
                            f"‚úÖ <b>–°–¥–µ–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞</b>: <b>{deal['pair']}</b>\n"
                            f"üìà –ü—Ä–∏–±—ã–ª—å: {profit_pct:.2f}%"
                        )
                        send_telegram_message(msg)
                        known_deals[deal_id]["status"] = status

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞: {e}")
        time.sleep(POLL_INTERVAL)

# === –ó–∞–ø—É—Å–∫ ===
if name == "__main__":
    threading.Thread(target=fake_server, daemon=True).start()
    print("üì° –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–¥–µ–ª–æ–∫ 3Commas –∑–∞–ø—É—â–µ–Ω...")
    monitor_deals()